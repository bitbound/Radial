<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@inject AuthenticationStateProvider AuthStateProvider
@inject Radial.Services.IClientConnection ClientConnection

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();

        if (authState.User.Identity.IsAuthenticated)
        {
            await ClientConnection.Connect();
        }

        await base.OnAfterRenderAsync(firstRender);
    }
}