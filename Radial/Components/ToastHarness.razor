@using Radial.Services.Client 
@inject IToastService ToastService

<div class="toast-harness">
    @foreach (var toast in ToastService?.Toasts)
    {
        <div class="toast-message @toast.ClassString" style="animation-delay: @(toast.Expiration.TotalMilliseconds.ToString() + "ms"); @toast.StyleOverrides">
            @toast.Message
        </div>
    }
</div>

@code {

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ToastService.OnToastsChanged += (s, e) =>
            {
                InvokeAsync(StateHasChanged);
            };
        }
        return base.OnInitializedAsync();

    }
}
