@using Radial.Services.Client 
@inject IToastService ToastService

<div class="toast-harness">
    @foreach (var toast in Toasts)
    {
        <div class="toast-message @toast.ClassString" style="animation-delay: @(toast.Expiration.TotalMilliseconds.ToString() + "ms"); @toast.StyleOverrides">
            @toast.Message
        </div>
    }
</div>

@code {

    private List<Radial.Models.Toast> Toasts { get; set; } = new List<Radial.Models.Toast>();

    protected override Task OnInitializedAsync()
    {
        ToastService.OnToastsChanged += (s, e) =>
        {
            Toasts = ToastService.Toasts;
            InvokeAsync(StateHasChanged);
        };
        return base.OnInitializedAsync();
    }
}
